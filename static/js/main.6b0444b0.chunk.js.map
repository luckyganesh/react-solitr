{"version":3,"sources":["index.js","data/cards.js","views/CardView.js","views/DeckView.js","views/ReservedPileView.js","views/StackPileView.js","views/GameView.js","modles/Game.js","modles/Deck.js","modles/Card.js","modles/ReservedPile.js","modles/stackPile.js"],"names":["EmptyCard","color","unicode","Default","CardView","_this$props","this","props","card","onClick","className","id","draggable","onDragStart","onDrop","onDragOver","react_default","a","createElement","style","React","Component","DeckView","deck","updater","hasNext","views_CardView","drag","hasOpenCard","getOpenCard","class","renderClosedCard","renderOpenCard","ReservedPileView","pile","hasLastCard","getLastCard","drop","allowDrop","StackPileView","stackPile","Array","getNoOfClosedCards","fill","map","x","openCards","getOpenCards","noOfOpenCards","length","index","hasCard","renderClosedCards","renderOpenCards","GameView","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","game","bind","assertThisInitialized","updateDeck","setState","ev","preventDefault","dataTransfer","setData","target","data","getData","moveCard","reservedPiles","getReservedPiles","reservedPilesJSX","reservedPileNumber","push","views_ReservedPileView","_this2","stackPilesJSX","getStackPiles","views_StackPileView","DeckView_DeckView","getDeck","renderReservedPiles","renderStackPiles","Game","stackPiles","update","sourceDetails","_sourceDetails$split","split","_sourceDetails$split2","slicedToArray","source","destinationDetails","_destinationDetails$s","_destinationDetails$s2","destination","getSource","getDestination","noOfCards","cards","getCards","addCards","removeCards","Deck","closedCards","slice","splice","reverse","lastCard","pop","Card","cardDetails","type","number","ReservedPile","checkingCards","initialCard","shift","every","result","isNextForReserved","areAddable","concat","checkCards","areOfThisTypeCards","checkNumber","previousCard","currentCard","isPreviousNumber","isOfSameType","StackPile","previousCardDetail","reduce","isNextNumber","isOfSameColor","newCard","shuffledCards","lodash","shuffle","deckCards","cardNumber","noOfReservedPiles","reservedPile","noOfStackPile","noOfClosedCards","ReactDOM","render","GameView_GameView","document","getElementById"],"mappings":"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","file":"static/js/main.6b0444b0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport lodash from 'lodash';\n\n//css\nimport './main.css';\n\n//data\nimport { Cards } from './data/cards';\n\n//view models\nimport GameView from './views/GameView';\n\n//game modles\nimport Game from './modles/Game';\nimport Deck from './modles/Deck';\nimport Card from './modles/Card';\nimport ReservedPile from './modles/ReservedPile';\nimport StackPile from './modles/stackPile';\n\nconst shuffledCards = lodash.shuffle(Cards).map(card => new Card(card));\n\n\nconst deckCards = [];\nfor (let cardNumber = 0; cardNumber < 24; cardNumber++) {\n    const card = shuffledCards.shift()\n    deckCards.push(card);\n}\n\nconst reservedPiles = [];\nfor (let noOfReservedPiles = 0; noOfReservedPiles < 4; noOfReservedPiles++) {\n    const reservedPile = new ReservedPile([]);\n    reservedPiles.push(reservedPile);\n}\n\nconst stackPiles = [];\nfor(let noOfStackPile = 0; noOfStackPile < 7;noOfStackPile++){\n    const closedCards = [];\n    for(let noOfClosedCards = 0; noOfClosedCards <= noOfStackPile - 1; noOfClosedCards++){\n        const card = shuffledCards.shift();\n        closedCards.push(card);\n    }\n    const openCards = [];\n    openCards.push(shuffledCards.shift());\n    const stackPile = new StackPile(closedCards,openCards);\n    stackPiles.push(stackPile);\n}\n\nconst deck = new Deck(deckCards);\nconst game = new Game(deck, reservedPiles,stackPiles);\n\nReactDOM.render(<GameView game={game} />, document.getElementById('root'));","const Cards =\n  [\n    {\n      \"type\": \"spade\",\n      \"number\": \"1\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A1}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"2\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A2}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"3\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A3}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"4\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A4}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"5\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A5}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"6\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A6}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"7\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A7}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"8\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A8}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"9\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A9}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"10\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AA}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"11\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AB}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"12\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AD}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"13\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AE}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"1\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D1}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"2\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D2}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"3\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D3}\",\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"4\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D4}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"5\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D5}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"6\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D6}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"7\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D7}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"8\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D8}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"9\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D9}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"10\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DA}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"11\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DB}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"12\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DD}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"13\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DE}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"1\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C1}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"2\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C2}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"3\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C3}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"4\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C4}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"5\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C5}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"6\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C6}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"7\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C7}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"8\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C8}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"9\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C9}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"10\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CA}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"11\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CB}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"12\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CD}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"13\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CE}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"1\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B1}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"2\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B2}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"3\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B3}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"4\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B4}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"5\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B5}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"6\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B6}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"7\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B7}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"8\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B8}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"9\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B9}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"10\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BA}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"11\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BB}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"12\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BD}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"13\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BE}\"\n    }\n  ]\n\nconst EmptyCard = {\n  \"color\":\"black\",\n  \"unicode\":\"\\u{1F0DF}\"\n}\n\nconst Default = {\n  \"color\":\"black\",\n  \"unicode\": \"\\u{1F0A0}\"\n}\n\nexport { Cards ,EmptyCard ,Default };","import React from \"react\";\n\nclass CardView extends React.Component {\n  render() {\n    const {\n      card,\n      onClick,\n      className,\n      id,\n      draggable,\n      onDragStart,\n      onDrop,\n      onDragOver\n    } = this.props;\n\n    return (\n      <div\n        style={{ color: card.color }}\n        className={\"card \" + className}\n        id={id}\n        draggable={draggable}\n        onDragStart={onDragStart}\n        onClick={onClick}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n      >\n        {card.unicode}\n      </div>\n    );\n  }\n}\n\nexport default CardView;\n","import React from \"react\";\n\nimport { EmptyCard, Default } from \"../data/cards\";\nimport CardView from \"./CardView\";\n\nexport default class DeckView extends React.Component {\n  renderClosedCard(deck, updater) {\n    const className = \"clickable pile-separator\";\n    if (deck.hasNext()) {\n      return (\n        <CardView className={className} onClick={updater} card={Default} />\n      );\n    }\n    return (\n      <CardView className={className} card={EmptyCard} onClick={updater} />\n    );\n  }\n\n  renderOpenCard(deck, drag) {\n    const className = \"pile-separator\";\n    if (deck.hasOpenCard()) {\n      const card = deck.getOpenCard();\n      return (\n        <CardView\n          className={className}\n          id=\"deck\"\n          draggable=\"true\"\n          onDragStart={drag}\n          card={card}\n        />\n      );\n    }\n    return <CardView className={className} card={EmptyCard} />;\n  }\n\n  render() {\n    return (\n      <div class=\"deck\">\n        {this.renderClosedCard(this.props.deck, this.props.updater)}\n        {this.renderOpenCard(this.props.deck, this.props.drag)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { EmptyCard } from \"../data/cards\";\nimport CardView from \"./CardView\";\n\nclass ReservedPileView extends React.Component {\n  render() {\n    const pile = this.props.pile;\n\n    if (pile.hasLastCard()) {\n      const card = pile.getLastCard();\n      return (\n        <CardView\n          id={\"reservedPiles_\" + this.props.id}\n          draggable=\"true\"\n          onDragStart={this.props.drag}\n          className=\"pile-separator\"\n          onDrop={this.props.drop}\n          onDragOver={this.props.allowDrop}\n          card={card}\n        />\n      );\n    }\n\n    return (\n      <CardView\n        id={\"reservedPiles_\" + this.props.id}\n        className=\"pile-separator\"\n        onDrop={this.props.drop}\n        onDragOver={this.props.allowDrop}\n        card={EmptyCard}\n      />\n    );\n  }\n}\n\nexport default ReservedPileView;\n","import React from \"react\";\nimport { EmptyCard, Default } from \"../data/cards\";\nimport CardView from \"./CardView\";\n\nclass StackPileView extends React.Component {\n  renderClosedCards(stackPile, id) {\n    return new Array(stackPile.getNoOfClosedCards())\n      .fill(0)\n      .map(x => (\n        <CardView\n          className=\"adjustable-card\"\n          id={\"stackPiles_\" + id}\n          card={Default}\n        />\n      ));\n  }\n\n  renderOpenCards(stackPile, id, drag) {\n    const openCards = stackPile.getOpenCards();\n    const noOfOpenCards = openCards.length;\n    if (noOfOpenCards === 0) {\n      return [];\n    }\n    return openCards.map((card, index) => {\n      return (\n        <CardView\n          className=\"adjustable-card\"\n          card={card}\n          id={\"stackPiles_\" + id + \"_\" + (noOfOpenCards - index)}\n          onDragStart={drag}\n          draggable=\"true\"\n        />\n      );\n    });\n  }\n\n  render() {\n    const { stackPile, id, drag, drop, allowDrop } = this.props;\n    if (!stackPile.hasCard()) {\n      return (\n        <div\n          className=\"stack-pile stack-pile-separator\"\n          id={\"stackPiles_\" + id}\n          onDrop={drop}\n          onDragOver={allowDrop}\n        >\n          <CardView\n            className=\"card adjustable-card\"\n            id={\"stackPiles_\" + id}\n            card={EmptyCard}\n          />\n          </div>\n      );\n    }\n\n    return (\n      <div\n        className=\"stack-pile stack-pile-separator\"\n        id={\"stackPiles_\" + id}\n        onDrop={drop}\n        onDragOver={allowDrop}\n      >\n        {this.renderClosedCards(stackPile, id)}\n        {this.renderOpenCards(stackPile, id, drag)}\n      </div>\n    );\n  }\n}\n\nexport default StackPileView;\n","import React from \"react\";\nimport DeckView from \"./DeckView\";\nimport ReservedPileView from \"./ReservedPileView\";\nimport StackPileView from \"./StackPileView\";\n\nexport default class GameView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { game: props.game };\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.allowDrop = this.allowDrop.bind(this);\n  }\n\n  updateDeck() {\n    this.state.game.updateDeck();\n    this.setState(state => state);\n  }\n\n  allowDrop(ev) {\n    ev.preventDefault();\n  }\n\n  drag(ev) {\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n  }\n\n  drop(ev) {\n    ev.preventDefault();\n    const data = ev.dataTransfer.getData(\"text\");\n    this.state.game.moveCard(data, ev.target.id);\n    this.setState(state => state);\n  }\n\n  renderReservedPiles() {\n    const reservedPiles = this.state.game.getReservedPiles();\n    const reservedPilesJSX = [];\n    for (\n      let reservedPileNumber = 0;\n      reservedPileNumber < reservedPiles.length;\n      reservedPileNumber++\n    ) {\n      reservedPilesJSX.push(\n        <ReservedPileView\n          pile={reservedPiles[reservedPileNumber]}\n          drag={this.drag}\n          drop={this.drop}\n          allowDrop={this.allowDrop}\n          id={reservedPileNumber}\n        />\n      );\n    }\n    return <div class=\"reserved-piles\">{reservedPilesJSX}</div>;\n  }\n\n  renderStackPiles() {\n    const stackPiles = this.state.game.getStackPiles();\n    const stackPilesJSX = stackPiles.map((stackPile, index) => {\n      return (\n        <StackPileView\n          stackPile={stackPile}\n          id={index}\n          drag={this.drag}\n          drop={this.drop}\n          allowDrop={this.allowDrop}\n        />\n      );\n    });\n    return <div className=\"stack-piles\">{stackPilesJSX}</div>;\n  }\n\n  render() {\n    return (\n      <div class=\"body\">\n        <div class=\"top-cards\">\n          <DeckView\n            deck={this.state.game.getDeck()}\n            updater={this.updateDeck.bind(this)}\n            drag={this.drag}\n          />\n          {this.renderReservedPiles()}\n        </div>\n        {this.renderStackPiles()}\n      </div>\n    );\n  }\n}\n","class Game {\n    constructor(deck,reservedPiles,stackPiles){\n        this.deck = deck;\n        this.reservedPiles = reservedPiles;\n        this.stackPiles = stackPiles;\n    }\n\n    getDeck(){\n        return this.deck;\n    }\n\n    getStackPiles(){\n        return this.stackPiles;\n    }\n    \n    updateDeck(){\n        this.deck.update();\n    }\n\n\n    getSource(sourceDetails){\n        if(sourceDetails === \"deck\"){\n            return this.deck;\n        }\n        const [source,id] = sourceDetails.split(\"_\");\n        return this[source][id];\n    }\n\n    getDestination(destinationDetails){\n        const [destination,id] = destinationDetails.split(\"_\");\n        return this[destination][id];\n    }\n\n    moveCard(sourceDetails,destinationDetails){\n        const source = this.getSource(sourceDetails);\n        const destination = this.getDestination(destinationDetails);\n        const noOfCards = sourceDetails.split(\"_\")[2];\n        const cards = source.getCards(+noOfCards);\n        const hasAdded = destination.addCards(cards);\n        if(hasAdded){\n            source.removeCards(+noOfCards);\n        }\n    }\n\n    getReservedPiles(){\n        return this.reservedPiles;\n    }\n}\n\nexport default Game;","class Deck {\n    constructor(cards){\n        this.closedCards = cards;\n        this.openCards = [];\n    }\n\n    hasNext(){\n        return this.closedCards.length !== 0;\n    }\n\n    hasOpenCard(){\n        return this.openCards.length !== 0;\n    }\n\n    getOpenCard(){\n        return this.openCards[this.openCards.length -1];\n    }\n\n    getCards(){\n        return this.openCards.slice(-1);\n    }\n    \n    removeCards(){\n        this.openCards.splice(-1);\n    }\n\n    update(){\n        if(this.closedCards.length === 0){\n            this.closedCards = this.openCards.reverse();\n            this.openCards = [];\n            return;\n        }\n        const lastCard = this.closedCards.pop();\n        this.openCards.push(lastCard);\n    }\n}\n\nexport default Deck;","class Card {\n    constructor(cardDetails){\n      this.type = cardDetails.type;\n      this.number = +cardDetails.number;\n      this.color = cardDetails.color;\n      this.unicode = cardDetails.unicode;\n    }\n\n    getUnicode(){\n        return this.unicode;\n    }\n\n    checkNumber(number){\n      return this.number === number;\n    }\n\n    isNextNumber(card){\n      return this.number === card.number + 1;\n    }\n\n    isPreviousNumber(card){\n      return this.number === card.number -1;\n    }\n\n    isOfSameType(card){\n      return this.type === card.type;\n    }\n\n    isOfSameColor(card){\n      return this.color === card.color; \n    }\n}\n\nexport default Card;","class ReservedPile {\n  constructor(cards) {\n    this.cards = cards;\n  }\n\n  hasLastCard() {\n    return this.cards.length !== 0;\n  }\n\n  getLastCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  checkCards(checkingCards) {\n    const cards = checkingCards.slice();\n    let initialCard = cards.shift();\n    if (cards.length === 0) return true;\n    return cards.every(card => {\n      const result = initialCard.isNextForReserved(card);\n      initialCard = card;\n      return result;\n    });\n  }\n\n  addCards(cards) {\n    if (this.areAddable(cards)) {\n      this.cards = this.cards.concat(cards);\n      return true;\n    }\n    return false;\n  }\n\n  areAddable(cards) {\n    if (!this.checkCards(cards)) {\n      return false;\n    }\n    if (!this.hasLastCard()) {\n      return cards[0].checkNumber(1);\n    }\n    return this.areOfThisTypeCards(this.getLastCard(), cards[0]);\n  }\n\n  areOfThisTypeCards(previousCard, currentCard) {\n    return (\n      previousCard.isPreviousNumber(currentCard) &&\n      previousCard.isOfSameType(currentCard)\n    );\n  }\n  \n  getCards() {\n    return this.cards.slice(-1);\n  }\n\n  removeCards() {\n    this.cards.splice(-1);\n  }\n}\n\nexport default ReservedPile;\n","class StackPile {\n  constructor(closedCards, openCards) {\n    this.closedCards = closedCards;\n    this.openCards = openCards;\n  }\n\n  hasCard() {\n    return this.openCards.length !== 0;\n  }\n\n  getNoOfClosedCards() {\n    return this.closedCards.length;\n  }\n\n  getOpenCards() {\n    return this.openCards;\n  }\n\n  addCards(cards) {\n    if (this.areAddable(cards)) {\n      this.openCards = this.openCards.concat(cards);\n      return true;\n    }\n    return false;\n  }\n\n  getLastCard() {\n    return this.openCards[this.openCards.length - 1];\n  }\n\n  areAddable(cards) {\n    if (!this.checkCards(cards)) {\n      return false;\n    }\n    if (!this.hasCard()) {\n      return cards[0].checkNumber(13);\n    }\n    return this.areOfThisTypeCards(this.getLastCard(), cards[0]);\n  }\n\n  checkCards(checkingCards) {\n    const cards = checkingCards.slice();\n    const previousCardDetail = { card: cards.shift(), result: true };\n    return cards.reduce((previousCardDetail, card) => {\n      if (!previousCardDetail.result) {\n        return previousCardDetail;\n      }\n      const result = this.areOfThisTypeCards(previousCardDetail.card, card);\n      return { card, result };\n    }, previousCardDetail).result;\n  }\n\n  areOfThisTypeCards(previousCard, currentCard) {\n    return (\n      previousCard.isNextNumber(currentCard) &&\n      !previousCard.isOfSameColor(currentCard)\n    );\n  }\n\n  getCards(noOfCards) {\n    return this.openCards.slice(-noOfCards);\n  }\n\n  removeCards(noOfCards) {\n    this.openCards.splice(-noOfCards);\n    if (this.openCards.length === 0 && this.closedCards.length !== 0) {\n      const newCard = this.closedCards.shift();\n      this.openCards.push(newCard);\n    }\n  }\n}\n\nexport default StackPile;\n"],"sourceRoot":""}
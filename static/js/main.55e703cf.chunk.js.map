{"version":3,"sources":["index.js","data/cards.js","views/CardView.js","views/DeckView.js","views/ReservedPileView.js","views/StackPileView.js","views/GameView.js","modles/Game.js","modles/Deck.js","modles/Card.js","modles/ReservedPile.js","modles/stackPile.js"],"names":["EmptyCard","color","unicode","Default","CardView","_this$props","this","props","card","onClick","className","id","draggable","onDragStart","onDrop","onDragOver","doubleClick","react_default","a","createElement","style","onDoubleClick","React","Component","DeckView","deck","updater","hasNext","views_CardView","drag","hasOpenCard","getOpenCard","class","renderClosedCard","renderOpenCard","ReservedPileView","pile","hasLastCard","getLastCard","drop","allowDrop","StackPileView","stackPile","Array","getNoOfClosedCards","fill","map","x","openCards","getOpenCards","noOfOpenCards","length","index","hasCard","renderClosedCards","renderOpenCards","GameView","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","game","bind","assertThisInitialized","placeCardToReserved","updateDeck","setState","ev","sourceDetail","target","moveCardToReserved","preventDefault","dataTransfer","setData","data","getData","moveCard","reservedPiles","getReservedPiles","reservedPilesJSX","reservedPileNumber","push","views_ReservedPileView","_this2","stackPilesJSX","getStackPiles","views_StackPileView","DeckView_DeckView","getDeck","renderReservedPiles","renderStackPiles","Game","stackPiles","update","sourceDetails","_sourceDetails$split","split","_sourceDetails$split2","slicedToArray","source","destinationDetails","_destinationDetails$s","_destinationDetails$s2","destination","noOfCards","cards","getCards","hasAdded","addCards","removeCards","getSource","getDestination","moveCardToDestination","some","reservedPile","Deck","closedCards","slice","splice","reverse","lastCard","pop","Card","cardDetails","type","number","ReservedPile","checkingCards","initialCard","shift","every","result","isNextForReserved","areAddable","concat","checkCards","areOfThisTypeCards","checkNumber","previousCard","currentCard","isPreviousNumber","isOfSameType","StackPile","previousCardDetail","reduce","isNextNumber","isOfSameColor","newCard","shuffledCards","lodash","shuffle","deckCards","cardNumber","noOfReservedPiles","noOfStackPile","noOfClosedCards","ReactDOM","render","GameView_GameView","document","getElementById"],"mappings":"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","file":"static/js/main.55e703cf.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport lodash from 'lodash';\n\n//css\nimport './main.css';\n\n//data\nimport { Cards } from './data/cards';\n\n//view models\nimport GameView from './views/GameView';\n\n//game modles\nimport Game from './modles/Game';\nimport Deck from './modles/Deck';\nimport Card from './modles/Card';\nimport ReservedPile from './modles/ReservedPile';\nimport StackPile from './modles/stackPile';\n\nconst shuffledCards = lodash.shuffle(Cards).map(card => new Card(card));\n\n\nconst deckCards = [];\nfor (let cardNumber = 0; cardNumber < 24; cardNumber++) {\n    const card = shuffledCards.shift()\n    deckCards.push(card);\n}\n\nconst reservedPiles = [];\nfor (let noOfReservedPiles = 0; noOfReservedPiles < 4; noOfReservedPiles++) {\n    const reservedPile = new ReservedPile([]);\n    reservedPiles.push(reservedPile);\n}\n\nconst stackPiles = [];\nfor(let noOfStackPile = 0; noOfStackPile < 7;noOfStackPile++){\n    const closedCards = [];\n    for(let noOfClosedCards = 0; noOfClosedCards <= noOfStackPile - 1; noOfClosedCards++){\n        const card = shuffledCards.shift();\n        closedCards.push(card);\n    }\n    const openCards = [];\n    openCards.push(shuffledCards.shift());\n    const stackPile = new StackPile(closedCards,openCards);\n    stackPiles.push(stackPile);\n}\n\nconst deck = new Deck(deckCards);\nconst game = new Game(deck, reservedPiles,stackPiles);\n\nReactDOM.render(<GameView game={game} />, document.getElementById('root'));","const Cards =\n  [\n    {\n      \"type\": \"spade\",\n      \"number\": \"1\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A1}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"2\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A2}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"3\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A3}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"4\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A4}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"5\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A5}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"6\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A6}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"7\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A7}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"8\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A8}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"9\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0A9}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"10\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AA}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"11\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AB}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"12\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AD}\"\n    },\n    {\n      \"type\": \"spade\",\n      \"number\": \"13\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0AE}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"1\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D1}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"2\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D2}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"3\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D3}\",\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"4\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D4}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"5\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D5}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"6\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D6}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"7\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D7}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"8\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D8}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"9\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0D9}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"10\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DA}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"11\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DB}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"12\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DD}\"\n    },\n    {\n      \"type\": \"club\",\n      \"number\": \"13\",\n      \"color\": \"black\",\n      \"unicode\": \"\\u{1F0DE}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"1\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C1}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"2\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C2}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"3\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C3}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"4\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C4}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"5\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C5}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"6\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C6}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"7\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C7}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"8\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C8}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"9\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0C9}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"10\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CA}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"11\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CB}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"12\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CD}\"\n    },\n    {\n      \"type\": \"diamond\",\n      \"number\": \"13\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0CE}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"1\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B1}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"2\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B2}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"3\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B3}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"4\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B4}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"5\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B5}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"6\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B6}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"7\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B7}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"8\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B8}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"9\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0B9}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"10\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BA}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"11\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BB}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"12\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BD}\"\n    },\n    {\n      \"type\": \"heart\",\n      \"number\": \"13\",\n      \"color\": \"red\",\n      \"unicode\": \"\\u{1F0BE}\"\n    }\n  ]\n\nconst EmptyCard = {\n  \"color\":\"black\",\n  \"unicode\":\"\\u{1F0DF}\"\n}\n\nconst Default = {\n  \"color\":\"black\",\n  \"unicode\": \"\\u{1F0A0}\"\n}\n\nexport { Cards ,EmptyCard ,Default };","import React from \"react\";\n\nclass CardView extends React.Component {\n  render() {\n    const {\n      card,\n      onClick,\n      className,\n      id,\n      draggable,\n      onDragStart,\n      onDrop,\n      onDragOver,\n      doubleClick\n    } = this.props;\n    \n    return (\n      <div\n        style={{ color: card.color }}\n        className={\"card \" + className}\n        id={id}\n        draggable={draggable}\n        onDragStart={onDragStart}\n        onClick={onClick}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onDoubleClick={doubleClick}\n      >\n        {card.unicode}\n      </div>\n    );\n  }\n}\n\nexport default CardView;\n","import React from \"react\";\n\nimport { EmptyCard, Default } from \"../data/cards\";\nimport CardView from \"./CardView\";\n\nexport default class DeckView extends React.Component {\n  renderClosedCard(deck, updater) {\n    const className = \"clickable pile-separator\";\n    if (deck.hasNext()) {\n      return (\n        <CardView className={className} onClick={updater} card={Default} />\n      );\n    }\n    return (\n      <CardView className={className} card={EmptyCard} onClick={updater} />\n    );\n  }\n\n  renderOpenCard(deck, drag, doubleClick) {\n    const className = \"pile-separator\";\n    if (deck.hasOpenCard()) {\n      const card = deck.getOpenCard();\n      return (\n        <CardView\n          className={className}\n          id=\"deck\"\n          draggable=\"true\"\n          onDragStart={drag}\n          card={card}\n          doubleClick={doubleClick}\n        />\n      );\n    }\n    return <CardView className={className} card={EmptyCard} />;\n  }\n\n  render() {\n    return (\n      <div class=\"deck\">\n        {this.renderClosedCard(this.props.deck, this.props.updater)}\n        {this.renderOpenCard(this.props.deck, this.props.drag,this.props.doubleClick)}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { EmptyCard } from \"../data/cards\";\nimport CardView from \"./CardView\";\n\nclass ReservedPileView extends React.Component {\n  render() {\n    const pile = this.props.pile;\n\n    if (pile.hasLastCard()) {\n      const card = pile.getLastCard();\n      return (\n        <CardView\n          id={\"reservedPiles_\" + this.props.id}\n          draggable=\"true\"\n          onDragStart={this.props.drag}\n          className=\"pile-separator\"\n          onDrop={this.props.drop}\n          onDragOver={this.props.allowDrop}\n          card={card}\n        />\n      );\n    }\n\n    return (\n      <CardView\n        id={\"reservedPiles_\" + this.props.id}\n        className=\"pile-separator\"\n        onDrop={this.props.drop}\n        onDragOver={this.props.allowDrop}\n        card={EmptyCard}\n      />\n    );\n  }\n}\n\nexport default ReservedPileView;\n","import React from \"react\";\nimport { EmptyCard, Default } from \"../data/cards\";\nimport CardView from \"./CardView\";\n\nclass StackPileView extends React.Component {\n  renderClosedCards(stackPile, id) {\n    return new Array(stackPile.getNoOfClosedCards())\n      .fill(0)\n      .map(x => (\n        <CardView\n          className=\"adjustable-card\"\n          id={\"stackPiles_\" + id}\n          card={Default}\n        />\n      ));\n  }\n\n  renderOpenCards(stackPile, id, drag, doubleClick) {\n    const openCards = stackPile.getOpenCards();\n    const noOfOpenCards = openCards.length;\n    if (noOfOpenCards === 0) {\n      return [];\n    }\n    return openCards.map((card, index) => {\n      return (\n        <CardView\n          className=\"adjustable-card\"\n          card={card}\n          id={\"stackPiles_\" + id + \"_\" + (noOfOpenCards - index)}\n          onDragStart={drag}\n          draggable=\"true\"\n          doubleClick={doubleClick}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { stackPile, id, drag, drop, allowDrop, doubleClick } = this.props;\n    if (!stackPile.hasCard()) {\n      return (\n        <div\n          className=\"stack-pile stack-pile-separator\"\n          id={\"stackPiles_\" + id}\n          onDrop={drop}\n          onDragOver={allowDrop}\n        >\n          <CardView\n            className=\"card adjustable-card\"\n            id={\"stackPiles_\" + id}\n            card={EmptyCard}\n          />\n        </div>\n      );\n    }\n    return (\n      <div\n        className=\"stack-pile stack-pile-separator\"\n        id={\"stackPiles_\" + id}\n        onDrop={drop}\n        onDragOver={allowDrop}\n      >\n        {this.renderClosedCards(stackPile, id)}\n        {this.renderOpenCards(stackPile, id, drag, doubleClick)}\n      </div>\n    );\n  }\n}\n\nexport default StackPileView;\n","import React from \"react\";\nimport DeckView from \"./DeckView\";\nimport ReservedPileView from \"./ReservedPileView\";\nimport StackPileView from \"./StackPileView\";\n\nexport default class GameView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { game: props.game };\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.allowDrop = this.allowDrop.bind(this);\n    this.placeCardToReserved = this.placeCardToReserved.bind(this);\n  }\n\n  updateDeck() {\n    this.state.game.updateDeck();\n    this.setState(state => state);\n  }\n\n  placeCardToReserved(ev){\n    const sourceDetail = ev.target.id;\n    this.state.game.moveCardToReserved(sourceDetail);\n    this.setState(state => state);\n  }\n\n  allowDrop(ev) {\n    ev.preventDefault();\n  }\n\n  drag(ev) {\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n  }\n\n  drop(ev) {\n    ev.preventDefault();\n    const data = ev.dataTransfer.getData(\"text\");\n    this.state.game.moveCard(data, ev.target.id);\n    this.setState(state => state);\n  }\n\n  renderReservedPiles() {\n    const reservedPiles = this.state.game.getReservedPiles();\n    const reservedPilesJSX = [];\n    for (\n      let reservedPileNumber = 0;\n      reservedPileNumber < reservedPiles.length;\n      reservedPileNumber++\n    ) {\n      reservedPilesJSX.push(\n        <ReservedPileView\n          pile={reservedPiles[reservedPileNumber]}\n          drag={this.drag}\n          drop={this.drop}\n          allowDrop={this.allowDrop}\n          id={reservedPileNumber}\n        />\n      );\n    }\n    return <div class=\"reserved-piles\">{reservedPilesJSX}</div>;\n  }\n\n  renderStackPiles() {\n    const stackPiles = this.state.game.getStackPiles();\n    const stackPilesJSX = stackPiles.map((stackPile, index) => {\n      return (\n        <StackPileView\n          stackPile={stackPile}\n          id={index}\n          drag={this.drag}\n          drop={this.drop}\n          allowDrop={this.allowDrop}\n          doubleClick={this.placeCardToReserved}\n        />\n      );\n    });\n    return <div className=\"stack-piles\">{stackPilesJSX}</div>;\n  }\n\n  render() {\n    return (\n      <div class=\"body\">\n        <div class=\"top-cards\">\n          <DeckView\n            deck={this.state.game.getDeck()}\n            updater={this.updateDeck.bind(this)}\n            drag={this.drag}\n            doubleClick={this.placeCardToReserved}\n          />\n          {this.renderReservedPiles()}\n        </div>\n        {this.renderStackPiles()}\n      </div>\n    );\n  }\n}\n","class Game {\n    constructor(deck,reservedPiles,stackPiles){\n        this.deck = deck;\n        this.reservedPiles = reservedPiles;\n        this.stackPiles = stackPiles;\n    }\n\n    getDeck(){\n        return this.deck;\n    }\n\n    getStackPiles(){\n        return this.stackPiles;\n    }\n    \n    updateDeck(){\n        this.deck.update();\n    }\n\n\n    getSource(sourceDetails){\n        if(sourceDetails === \"deck\"){\n            return this.deck;\n        }\n        const [source,id] = sourceDetails.split(\"_\");\n        return this[source][id];\n    }\n\n    getDestination(destinationDetails){\n        const [destination,id] = destinationDetails.split(\"_\");\n        return this[destination][id];\n    }\n\n    moveCardToDestination(source,destination,noOfCards){\n        const cards = source.getCards(+noOfCards);\n        const hasAdded = destination.addCards(cards);\n        if(hasAdded){\n            source.removeCards(+noOfCards);\n        }\n        return hasAdded;\n    }\n\n    moveCard(sourceDetails,destinationDetails){\n        const source = this.getSource(sourceDetails);\n        const destination = this.getDestination(destinationDetails);\n        const noOfCards = sourceDetails.split(\"_\")[2];\n        return this.moveCardToDestination(source,destination,noOfCards);\n    }\n\n    moveCardToReserved(sourceDetails){\n        const source = this.getSource(sourceDetails);\n        const noOfCards = +sourceDetails.split(\"_\")[2];\n        return this.reservedPiles.some((reservedPile) => {\n            return this.moveCardToDestination(source,reservedPile,noOfCards);\n        });    \n    }\n\n    getReservedPiles(){\n        return this.reservedPiles;\n    }\n}\n\nexport default Game;","class Deck {\n    constructor(cards){\n        this.closedCards = cards;\n        this.openCards = [];\n    }\n\n    hasNext(){\n        return this.closedCards.length !== 0;\n    }\n\n    hasOpenCard(){\n        return this.openCards.length !== 0;\n    }\n\n    getOpenCard(){\n        return this.openCards[this.openCards.length -1];\n    }\n\n    getCards(){\n        return this.openCards.slice(-1);\n    }\n    \n    removeCards(){\n        this.openCards.splice(-1);\n    }\n\n    update(){\n        if(this.closedCards.length === 0){\n            this.closedCards = this.openCards.reverse();\n            this.openCards = [];\n            return;\n        }\n        const lastCard = this.closedCards.pop();\n        this.openCards.push(lastCard);\n    }\n}\n\nexport default Deck;","class Card {\n    constructor(cardDetails){\n      this.type = cardDetails.type;\n      this.number = +cardDetails.number;\n      this.color = cardDetails.color;\n      this.unicode = cardDetails.unicode;\n    }\n\n    getUnicode(){\n        return this.unicode;\n    }\n\n    checkNumber(number){\n      return this.number === number;\n    }\n\n    isNextNumber(card){\n      return this.number === card.number + 1;\n    }\n\n    isPreviousNumber(card){\n      return this.number === card.number -1;\n    }\n\n    isOfSameType(card){\n      return this.type === card.type;\n    }\n\n    isOfSameColor(card){\n      return this.color === card.color; \n    }\n}\n\nexport default Card;","class ReservedPile {\n  constructor(cards) {\n    this.cards = cards;\n  }\n\n  hasLastCard() {\n    return this.cards.length !== 0;\n  }\n\n  getLastCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  checkCards(checkingCards) {\n    const cards = checkingCards.slice();\n    let initialCard = cards.shift();\n    if (cards.length === 0) return true;\n    return cards.every(card => {\n      const result = initialCard.isNextForReserved(card);\n      initialCard = card;\n      return result;\n    });\n  }\n\n  addCards(cards) {\n    if (this.areAddable(cards)) {\n      this.cards = this.cards.concat(cards);\n      return true;\n    }\n    return false;\n  }\n\n  areAddable(cards) {\n    if (!this.checkCards(cards)) {\n      return false;\n    }\n    if (!this.hasLastCard()) {\n      return cards[0].checkNumber(1);\n    }\n    return this.areOfThisTypeCards(this.getLastCard(), cards[0]);\n  }\n\n  areOfThisTypeCards(previousCard, currentCard) {\n    return (\n      previousCard.isPreviousNumber(currentCard) &&\n      previousCard.isOfSameType(currentCard)\n    );\n  }\n  \n  getCards() {\n    return this.cards.slice(-1);\n  }\n\n  removeCards() {\n    this.cards.splice(-1);\n  }\n}\n\nexport default ReservedPile;\n","class StackPile {\n  constructor(closedCards, openCards) {\n    this.closedCards = closedCards;\n    this.openCards = openCards;\n  }\n\n  hasCard() {\n    return this.openCards.length !== 0;\n  }\n\n  getNoOfClosedCards() {\n    return this.closedCards.length;\n  }\n\n  getOpenCards() {\n    return this.openCards;\n  }\n\n  addCards(cards) {\n    if (this.areAddable(cards)) {\n      this.openCards = this.openCards.concat(cards);\n      return true;\n    }\n    return false;\n  }\n\n  getLastCard() {\n    return this.openCards[this.openCards.length - 1];\n  }\n\n  areAddable(cards) {\n    if (!this.checkCards(cards)) {\n      return false;\n    }\n    if (!this.hasCard()) {\n      return cards[0].checkNumber(13);\n    }\n    return this.areOfThisTypeCards(this.getLastCard(), cards[0]);\n  }\n\n  checkCards(checkingCards) {\n    const cards = checkingCards.slice();\n    const previousCardDetail = { card: cards.shift(), result: true };\n    return cards.reduce((previousCardDetail, card) => {\n      if (!previousCardDetail.result) {\n        return previousCardDetail;\n      }\n      const result = this.areOfThisTypeCards(previousCardDetail.card, card);\n      return { card, result };\n    }, previousCardDetail).result;\n  }\n\n  areOfThisTypeCards(previousCard, currentCard) {\n    return (\n      previousCard.isNextNumber(currentCard) &&\n      !previousCard.isOfSameColor(currentCard)\n    );\n  }\n\n  getCards(noOfCards) {\n    return this.openCards.slice(-noOfCards);\n  }\n\n  removeCards(noOfCards) {\n    this.openCards.splice(-noOfCards);\n    if (this.openCards.length === 0 && this.closedCards.length !== 0) {\n      const newCard = this.closedCards.shift();\n      this.openCards.push(newCard);\n    }\n  }\n}\n\nexport default StackPile;\n"],"sourceRoot":""}